[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sebou\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sebou\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 11.0.0.1)
[debug] Load.defaultLoad until apply took 200.261899ms
[debug]           Load.loadUnit: plugins took 151.75ms
[debug]           Load.loadUnit: defsScala took 0.523401ms
[debug] [Loading] Scanning directory C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres\project
[debug]             Load.loadUnit: mkEval took 16.729699ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 33.8251 ms
[info] loading settings for project connecting_to_postgres-build from idea.sbt ...
[debug]               Load.resolveProject(connecting_to_postgres-build) took 91.813399ms
[debug]             Load.loadTransitive: finalizeProject(Project(id connecting_to_postgres-build, base: C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres\project, plugins: List(<none>))) took 142.998501ms
[debug] [Loading] Done in C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres\project, returning: (connecting_to_postgres-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4236.522101ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.9151ms
[debug]         Load.loadUnit(file:/C:/Users/sebou/demo/ITC/ITC/SCALA/Connecting_To_PostGres/project/, ...) took 4413.898901ms
[debug]       Load.apply: load took 4610.023ms
[debug]       Load.apply: resolveProjects took 8.552999ms
[debug]       Load.apply: finalTransforms took 105.175ms
[debug]       Load.apply: config.delegates took 13.719099ms
[debug]       Load.apply: Def.make(settings)... took 648.9459ms
[debug]       Load.apply: structureIndex took 166.2776ms
[debug]       Load.apply: mkStreams took 2.9126ms
[info] loading project definition from C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7963.585601ms
[debug]     Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres
[debug]       Load.loadUnit: mkEval took 0.2965ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4825 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 50.4595ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres, plugins: List(<none>))) took 56.876001ms
[debug] [Loading] Done in C:\Users\sebou\demo\ITC\ITC\SCALA\Connecting_To_PostGres, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2023.8355ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.1433ms
[debug]   Load.loadUnit(file:/C:/Users/sebou/demo/ITC/ITC/SCALA/Connecting_To_PostGres/, ...) took 10000.9108ms
[debug] Load.apply: load took 10074.397ms
[debug] Load.apply: resolveProjects took 0.2931ms
[debug] Load.apply: finalTransforms took 55.215301ms
[debug] Load.apply: config.delegates took 0.4121ms
[debug] Load.apply: Def.make(settings)... took 112.260099ms
[debug] Load.apply: structureIndex took 45.6211ms
[debug] Load.apply: mkStreams took 0.004199ms
[info] set current project to Connecting_To_PostGres (in build file:/C:/Users/sebou/demo/ITC/ITC/SCALA/Connecting_To_PostGres/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55263 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55263, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Connecting_To_PostGres (in build file:/C:/Users/sebou/demo/ITC/ITC/SCALA/Connecting_To_PostGres/)
[debug] > Exec(idea-shell, None, None)
